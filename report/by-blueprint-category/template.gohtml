<!doctype html>

<html>

<head>
    <meta charset="utf-8">
    <title>Provider, Service and Categories</title>

    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">

    <script type="application/javascript">
        let blueprintServiceMap = new Map()

        function addBlueprintInformation(blueprint, tenancy, serviceProvider, proceedingDiv) {
            if (blueprintServiceMap.get(blueprint) === undefined) {
                blueprintServiceMap.set(blueprint, {
                    tenancies: [tenancy],
                    serviceProviders: [serviceProvider],
                    preceedingDivs: [proceedingDiv]
                })
            } else {
                if (!blueprintServiceMap.get(blueprint).tenancies.includes(tenancy)) {
                    blueprintServiceMap.get(blueprint).tenancies.push(tenancy)
                }
                if (!blueprintServiceMap.get(blueprint).serviceProviders.includes(serviceProvider)) {
                    blueprintServiceMap.get(blueprint).serviceProviders.push(serviceProvider)
                }
                if (!blueprintServiceMap.get(blueprint).preceedingDivs.includes(proceedingDiv)) {
                    blueprintServiceMap.get(blueprint).preceedingDivs.push(proceedingDiv)
                }
            }
        }

        function addIndicator(divID, text, cssClass) {
            let newDiv = document.createElement("div");
            newDiv.className = cssClass;
            newDiv.appendChild(document.createTextNode(text));
            const currentDiv = document.getElementById(divID);
            currentDiv.appendChild(newDiv);
        }

        function addSummaryIndicators() {
            blueprintServiceMap.forEach(function(blueprint,bluePrintID) {
                let tenancies = blueprint.tenancies
                let serviceProviders = blueprint.serviceProviders
                let preceedingDivs = blueprint.preceedingDivs
                preceedingDivs.forEach(function (divID, divIDIndex) {
                    serviceProviders.forEach(function (serviceProviderID, serviceProviderIndex) {
                        addIndicator(divID, serviceProviderID, "summary-indicator summary-indicator-service-provider")
                    })
                    tenancies.forEach(function (tenancyID, tenancyIndex) {
                        addIndicator(divID, tenancyID, "summary-indicator summary-indicator-tenancy")
                    })
                })
            })
        }
    </script>
</head>

<style>
    body {
        margin: auto;
        width: 98%;
        padding-top: 10px;
        font-family: "RobotoDraft", "Roboto", "Helvetica", sans-serif;
        -webkit-font-smoothing: antialiased;
    }

    input {
        display: none;
    }

    label {
        display: block;
        padding: 8px 22px;
        margin: 0 0 1px 0;
        cursor: pointer;
        background: #000066;
        border-radius: 3px;
        color: #FFF;
        transition: ease .5s;
    }

    label:hover {
        background: #000033;
    }

    .content {
        background: #CCFFFF;
        padding: 10px 25px;
        border: 1px solid #00CCFF;
        margin: 0 0 1px 0;
        border-radius: 3px;
        display: flex;
    }

    input + label + .content {
        display: none;
    }

    input:checked + label + .content {
        display: block;
    }

    .definition {
        color: lightblue;
        margin-bottom: 3px;
        font-size: x-small;
        border: black;
    }

    .provider {
        text-align: center;
    }

    .indicator {
        border: inset 1px;
        font-weight: normal;
        font-size: small;
        text-align: center;
        width: fit-content;
        float: right;
        padding: 5px;
        justify-content: center;
    }

    .level1 {
        display: flex;
        justify-content: space-between;
        background: #003366;
        color: white;
    }

    .level1:hover {
        background: #003333;
    }


    /* card */
    /* |-- card-contents */
    /*     |-- card-title-bar */
    /*         |-- card-title */
    /*         |-- card-link */
    /*     |-- card-description */
    /*     |-- card-footer */
    /*         |-- summary-indicators */
    /*             |-- summary-indicator... */
    /*         |-- blueprint-services */
    /*             |-- blueprint-service... */


    /* container for the overall blueprint card - handles shading etc*/
    .card {
        box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);
        transition: 0.3s;
        border-radius: 5px;
        width: 30%;
        background: beige;
        margin: 10px;
        display: inline-flex;
        align-items: center;
    }
    .card:hover {
        box-shadow: 0 12px 24px 0 rgba(0,0,0,0.2);
    }

    /* container for the overall contents of the card */
    .card-contents {
        padding: 2px 16px;
    }

    .card-title-bar {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .card-title {
        font-weight: bold;
        margin-top: 10px;
    }


    .card-link {
    }
    .card-link:hover {
        box-shadow: 1px 1px 3px gray;
        border-radius: 5px;
    }
    .card-link a {
        text-decoration: none
    }

    .card-description {
        color: darkslategrey;
        font-size: small;
        margin-top: 5px;
        margin-bottom: 10px;
    }

    .card-footer {
        display: flex;
        justify-content: space-between;
    }

    /* container for the multiple summary indicators for the blueprint */
    .summary-indicators {
        display: flex;
        flex-wrap: wrap;
        align-items: center;
        padding-bottom: 10px;
    }

    /* container for individual summary indicator */
    .summary-indicator {
        /*border: inset 1px;*/
        font-size: small;
        text-align: center;
        width: fit-content;
        float: left;
        padding: 8px;
        margin: 3px;
        justify-content: center;
        border-radius: 4px;
        box-shadow: 0 2px 2px 0 rgba(0,0,0,0.2);
    }

    .summary-indicator-service-provider {
        font-weight: bolder;
        background: slategrey;
        color: midnightblue;
    }

    .summary-indicator-tenancy {
        font-weight: normal;
        background: darkgrey;
        color: black;
    }


        /* container for the multiple services used by the blueprint */
    .blueprint-services {
        display: flex;
        flex-wrap: wrap;
        justify-content: space-between;
        flex-direction: row-reverse;
        padding-bottom: 10px;
    }

    .blueprint-image {
        max-height: 100%;
        max-width: 100%;
    }
</style>

<body onload="addSummaryIndicators()">
{{- range $category := . -}}
    {{- $categoryClass := $category.Class -}}
    {{- $categoryID := $category.ID -}}
    {{- $categoryUID := (print $categoryClass "-" $categoryID)}}
    {{- $categoryName := index $category.Fields "BlueprintCapability.Name"}}
    {{- $categoryDescription := index $category.Fields "BlueprintCapability.Description"}}

    <input type="checkbox" id="{{$categoryUID}}"/>
    <label for="{{$categoryUID}}">
        <div style="font-weight: bolder">{{$categoryName}}</div>
        <div style="margin-top: 3px; font-size: medium; color: gray">{{$categoryDescription}}</div>
    </label>

    <div class="content">
        {{- range $key,$value := $category.CompositeSectionDefinitions -}}
            {{- if eq $key "GROUPED_BY" -}}
                {{- range $subcategory := $value -}}
                    {{- $subcategoryClass := $subcategory.Class -}}
                    {{- $subcategoryID := $subcategory.ID -}}
                    {{- $subcategoryUID := (printf "%s-%s" $subcategoryClass $subcategoryID)}}
                    {{- $subcategoryName := index $subcategory.Fields "BlueprintCategory.Name" -}}
                    {{- $subcategoryDescription := index $subcategory.Fields "BlueprintCategory.Description" -}}
                    <input type="checkbox" id="{{$subcategoryUID}}"/>
                    <label for="{{$subcategoryUID}}" class="level1">
                        <div>
                            <div>{{$subcategoryName}}</div>
                            <div style="font-size: smaller; color: gray">{{$subcategoryDescription}}</div>
                        </div>
                    </label>

                    <div class="content">
                        {{- range $key,$value := $subcategory.CompositeSectionDefinitions -}}
                            {{- if eq $key "DEMONSTRATES" -}}
                                {{- range $blueprint := $value -}}
                                    {{- $blueprintClass := $blueprint.Class -}}
                                    {{- $blueprintID := $blueprint.ID -}}
                                    {{- $blueprintUID := (printf "%s-%s-%s" $subcategoryUID $blueprintClass $blueprintID)}}
                                    {{- $blueprintName := index $blueprint.Fields "Blueprint.Name" -}}
                                    {{- $blueprintDescription := index $blueprint.Fields "Blueprint.Description" -}}
                                    {{- $blueprintImage := index $blueprint.Fields "Blueprint.ImageSrc" -}}
                                    {{- $blueprintLink := index $blueprint.Fields "Blueprint.Link" -}}

                                    <div class="card">
                                        <div class="card-contents">
                                            <div class="card-title-bar">
                                                <div class="card-title">{{$blueprintName}}</div>
                                                <div class="material-icons card-link"><a href="{{$blueprintLink}}" target="_blank">link</a></div>
                                            </div>
                                            <div class="card-description">
                                                <div>
                                                    <img class="blueprint-image" src="data:image;{{$blueprintImage}}">
                                                </div>
                                                {{$blueprintDescription}}
                                            </div>

                                            <div class="card-footer">
                                                <div class="summary-indicators" id="{{$blueprintUID}}">
                                                    <!-- placeholder: will be populated on page load by javascript function -->
                                                </div>
                                                <div class="blueprint-services">
                                                    {{- range $key,$value := $blueprint.CompositeSectionDefinitions -}}
                                                        {{- if eq $key "COMPOSED_OF" -}}
                                                            {{- range $blueprintService := $value -}}
                                                                {{- $blueprintServiceClass := $blueprintService.Class -}}
                                                                {{- $blueprintServiceID := $blueprintService.ID -}}
                                                                {{- $blueprintServiceUID := (printf "%s-%s" $blueprintService $subcategoryID)}}
                                                                {{- $blueprintServiceName := index $blueprintService.Fields "Service.Name" -}}
                                                                {{- $blueprintServiceDescription := index $blueprintService.Fields "Service.Description" -}}
                                                                {{- $blueprintServiceLink := index $blueprintService.Fields "Service.Link" -}}
                                                                {{- $blueprintServiceImgSrc := index $blueprintService.Fields "Service.ImgSrc" -}}
                                                                {{- $blueprintServiceProviderName := index $blueprintService.Fields "ServiceProvider.Name" -}}
                                                                {{- $blueprintServiceTenancyName := index $blueprintService.Fields "ServiceTenancy.Name" -}}
                                                                {{- $blueprintServiceTenancyBackgroundColour := index $blueprintService.Fields "ServiceTenancy.BackgroundColour" -}}
                                                                {{- $blueprintServiceTenancyFontColour := index $blueprintService.Fields "ServiceTenancy.FontColour" -}}

                                                                <script type="application/javascript">
                                                                    addBlueprintInformation({{$blueprintID}}, {{$blueprintServiceTenancyName}}, {{$blueprintServiceProviderName}}, {{$blueprintUID}})
                                                                </script>

                                                                    <div>
                                                                        <div class="indicator"
                                                                             style="background: {{$blueprintServiceTenancyBackgroundColour}}; color: {{$blueprintServiceTenancyFontColour}}">
                                                                            <div class="definition provider">{{$blueprintServiceProviderName}}</div>
                                                                            {{$blueprintServiceName}}
                                                                            <img height="25" width="25" src="data:image;{{$blueprintServiceImgSrc}}">
                                                                        </div>
                                                                    </div>
                                                            {{end -}}
                                                        {{- end -}}
                                                    {{- end -}}
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                {{end -}}
                            {{- end -}}
                        {{- end -}}


                    </div>
                {{end -}}
            {{- end -}}
        {{- end -}}
    </div>
{{end}}

</body>

</html>